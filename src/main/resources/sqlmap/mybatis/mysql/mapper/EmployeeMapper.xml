<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzjd.mis.graduate.api.dao.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.lzjd.mis.graduate.api.domain.pojo.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status_code" jdbcType="VARCHAR" property="statusCode" />
    <result column="status_name" jdbcType="VARCHAR" property="statusName" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>



  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, password, sex, phone, status_code, status_name, picture, address
  </sql>

  <sql id="Base_Column_List1">
    a.id, a.code, a.name, a.password, a.sex, a.phone, a.status_code, a.status_name, a.picture, a.address,b.cost
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Employee">
    insert into employee (id, code, name, 
      password, sex, phone, 
      status_code, status_name, picture, 
      address)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{statusCode,jdbcType=VARCHAR}, #{statusName,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="statusCode != null">
        status_code,
      </if>
      <if test="statusName != null">
        status_name,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null">
        #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="statusName != null">
        #{statusName,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Employee">
    update employee
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null">
        status_code = #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="statusName != null">
        status_name = #{statusName,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Employee">
    update employee
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      status_code = #{statusCode,jdbcType=VARCHAR},
      status_name = #{statusName,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where  name = #{name,jdbcType=VARCHAR}
  </select>

  <select id="checkName" resultType="java.lang.Integer">
    SELECT
    COUNT(1)
    FROM
    employee
    WHERE 1=1
    <if test="name!=null and name!=''">
      AND name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="id!=null">
      AND id!=#{id,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getEmployeelist" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where name != "admin"
  </select>

  <select id="getHomeList" resultType="com.lzjd.mis.graduate.api.domain.responses.EmployeeHomeVo">
    select
    <include refid="Base_Column_List1" />
    from employee  a left join wage b  on a.code =b.epm_code
    where a.name != "admin"
  </select>

  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where code = #{code,jdbcType=VARCHAR}
  </select>
</mapper>