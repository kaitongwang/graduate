<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzjd.mis.graduate.api.dao.mapper.OderMapper">
  <resultMap id="BaseResultMap" type="com.lzjd.mis.graduate.api.domain.pojo.Oder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="service_code" jdbcType="VARCHAR" property="serviceCode" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="customer_code" jdbcType="VARCHAR" property="customerCode" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="employee_code" jdbcType="VARCHAR" property="employeeCode" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="cost" jdbcType="BIGINT" property="cost" />
    <result column="text" jdbcType="VARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, start_date, time, service_code, service_name, customer_code, customer_name, 
    employee_code, employee_name, address, price, cost, text
  </sql>
  <select id="selectByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.OderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oder
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oder
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.OderExample">
    delete from oder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Oder">
    insert into oder (id, code, start_date, 
      time, service_code, service_name, 
      customer_code, customer_name, employee_code, 
      employee_name, address, price, 
      cost, text)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, 
      #{time,jdbcType=BIGINT}, #{serviceCode,jdbcType=VARCHAR}, #{serviceName,jdbcType=VARCHAR}, 
      #{customerCode,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{employeeCode,jdbcType=VARCHAR}, 
      #{employeeName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, 
      #{cost,jdbcType=BIGINT}, #{text,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Oder">
    insert into oder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="serviceCode != null">
        service_code,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="customerCode != null">
        customer_code,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="employeeCode != null">
        employee_code,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="serviceCode != null">
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="customerCode != null">
        #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="employeeCode != null">
        #{employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=BIGINT},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.OderExample" resultType="java.lang.Long">
    select count(*) from oder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.serviceCode != null">
        service_code = #{record.serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerCode != null">
        customer_code = #{record.customerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeCode != null">
        employee_code = #{record.employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=BIGINT},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oder
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      time = #{record.time,jdbcType=BIGINT},
      service_code = #{record.serviceCode,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      customer_code = #{record.customerCode,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      employee_code = #{record.employeeCode,jdbcType=VARCHAR},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      cost = #{record.cost,jdbcType=BIGINT},
      text = #{record.text,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Oder">
    update oder
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="serviceCode != null">
        service_code = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="customerCode != null">
        customer_code = #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="employeeCode != null">
        employee_code = #{employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=BIGINT},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Oder">
    update oder
    set code = #{code,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=BIGINT},
      service_code = #{serviceCode,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      customer_code = #{customerCode,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      employee_code = #{employeeCode,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      cost = #{cost,jdbcType=BIGINT},
      text = #{text,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>