<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzjd.mis.graduate.api.dao.mapper.WagesMapper">
  <resultMap id="BaseResultMap" type="com.lzjd.mis.graduate.api.domain.pojo.Wages">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employee_code" jdbcType="VARCHAR" property="employeeCode" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="salary" jdbcType="BIGINT" property="salary" />
    <result column="percentage" jdbcType="BIGINT" property="percentage" />
    <result column="fine" jdbcType="BIGINT" property="fine" />
    <result column="year" jdbcType="BIGINT" property="year" />
    <result column="month" jdbcType="BIGINT" property="month" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, employee_code, employee_name, salary, percentage, fine, year, month
  </sql>
  <select id="selectByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.WagesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wages
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wages
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.WagesExample">
    delete from wages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Wages">
    insert into wages (id, employee_code, employee_name,
      salary, percentage, fine,
      year, month)
    values (#{id,jdbcType=INTEGER}, #{employeeCode,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR},
      #{salary,jdbcType=BIGINT}, #{percentage,jdbcType=BIGINT}, #{fine,jdbcType=BIGINT},
      #{year,jdbcType=BIGINT}, #{month,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Wages">
    insert into wages
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeCode != null">
        employee_code,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="percentage != null">
        percentage,
      </if>
      <if test="fine != null">
        fine,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="month != null">
        month,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeCode != null">
        #{employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=BIGINT},
      </if>
      <if test="percentage != null">
        #{percentage,jdbcType=BIGINT},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=BIGINT},
      </if>
      <if test="month != null">
        #{month,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzjd.mis.graduate.api.domain.pojo.WagesExample" resultType="java.lang.Long">
    select count(*) from wages
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wages
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.employeeCode != null">
        employee_code = #{record.employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=BIGINT},
      </if>
      <if test="record.percentage != null">
        percentage = #{record.percentage,jdbcType=BIGINT},
      </if>
      <if test="record.fine != null">
        fine = #{record.fine,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=BIGINT},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wages
    set id = #{record.id,jdbcType=INTEGER},
    employee_code = #{record.employeeCode,jdbcType=VARCHAR},
    employee_name = #{record.employeeName,jdbcType=VARCHAR},
    salary = #{record.salary,jdbcType=BIGINT},
    percentage = #{record.percentage,jdbcType=BIGINT},
    fine = #{record.fine,jdbcType=BIGINT},
    year = #{record.year,jdbcType=BIGINT},
    month = #{record.month,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Wages">
    update wages
    <set>
      <if test="employeeCode != null">
        employee_code = #{employeeCode,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=BIGINT},
      </if>
      <if test="percentage != null">
        percentage = #{percentage,jdbcType=BIGINT},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=BIGINT},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzjd.mis.graduate.api.domain.pojo.Wages">
    update wages
    set employee_code = #{employeeCode,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=BIGINT},
      percentage = #{percentage,jdbcType=BIGINT},
      fine = #{fine,jdbcType=BIGINT},
      year = #{year,jdbcType=BIGINT},
      month = #{month,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" parameterType="com.lzjd.mis.graduate.api.domain.request.WagesReqVo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wages
    where 1 =1
    <if test="employeeCode != null">
    and employee_code = #{employeeCode,jdbcType=VARCHAR}
    </if>
    order by year desc,month desc
  </select>
</mapper>